# laws

law random temperatureIntervalle {
    values in interval [20.4,24.8]
}

law random temperatureEnsemble {
    values in list (18, 20, 22, 24)
}

law markov presenceVoiture {
    0 -> 0.6 -> 1
    0 -> 0.4 -> 0
    1 -> 0.3 -> 0
    1 -> 0.6 -> 1
    1 -> 0.1 -> 2
    2 -> 0.8 -> 0
    2 -> 0.15 -> 1
    2 -> 0.05 -> 2
}

law markov lumiDehors {
    "sunny" -> 0.1 -> "rainy"
    "sunny" -> 0.9 -> "sunny"
    "rainy" -> 0.5 -> "sunny"
    "rainy" -> 0.5 -> "rainy"
}

law function polyMilieuJournee {
    `x%86400 < 32200` => `4`
    `x%86400 > 32200` => `abs(-(2*x^2) + 5*x - 1)`
    `x%86400 = 32200` => `0`
}

law function simpleCarre {
    `x` => `(x/100000000)^2`
}


# sensors

sensor capteurNombreVoiture {
    governed by presenceVoiture
    period 1h
}

sensor capteurFonctionBizarre {
    governed by polyMilieuJournee
    period 30m
}

sensor capteurPersonneBU {
    governed by simpleCarre
    period 1m
}

sensor capteurLumiFenetre {
    governed by lumiDehors
    period 5m
}

sensor capteurTempSalle {
    governed by temperatureIntervalle
    period 100s
    noise [-0.05,+0.02]
}

sensor capteurTempBureau {
    governed by temperatureEnsemble
    period 10m
}


# areas

area parking {
    has 10 capteurNombreVoiture
}

area salleDeClasse {
    has 3 capteurLumiFenetre
    has 1 capteurTempSalle with noise [1.0,3.0]
}

area bureau {
    has 2 capteurTempBureau
    has 1 capteurFonctionBizarre
}

app oldSchool {
    parking: P1, P2
    salleDeClasse: C1, C2
    bureau: B1, B2, B3, B4
}

app newSchool {
    parking: P3
    salleDeClasse: C3, C4, C5, C6
}

global {
    replay
        start 07/02/2018 00:00
        end 14/02/2018 00:00
}